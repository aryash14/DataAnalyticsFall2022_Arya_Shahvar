library(datasets)  # Load built-in datasets
head(iris)         # Show the first six lines of iris data
head(iris)         # Show the first six lines of iris data
summary(iris)      # Summary statistics for iris data
plot(iris)         # Scatterplot matrix for iris data
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
library(datasets)  # Load built-in datasets
head(iris)         # Show the first six lines of iris data
plot(iris)         # Scatterplot matrix for iris data
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# I recommend "pacman" for managing add-on packages. It will
# install packages, if needed, and then load the packages.
install.packages("pacman")
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
library(pacman)  # No message.
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
library(datasets)  # Load/unload base packages manually
# Clear packages
p_unload(dplyr, tidyr, stringr) # Clear specific packages
p_unload(all)  # Easier: clears all add-ons
detach("package:datasets", unload = TRUE)  # For base
# Clear console
cat("\014")  # ctrl+L
man::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
p_unload(all)  # Easier: clears all add-ons
detach("package:datasets", unload = TRUE)  # For base
library(datasets)  # Load/unload base packages manually
head(iris)
?plot  # Help for plot()
plot(iris$Species)  # Categorical variable
plot(iris$Petal.Length)  # Quantitative variable
plot(iris$Species, iris$Petal.Width)  # Cat x quant
plot(iris$Petal.Length, iris$Petal.Width)  # Quant pair
plot(iris)  # Entire data frame
# Plot with options
plot(iris$Petal.Length, iris$Petal.Width,
col = "#cc0000",  # Hex code for datalab.cc red
pch = 19,         # Use solid circles for points
main = "Iris: Petal Length vs. Petal Width",
xlab = "Petal Length",
ylab = "Petal Width")
plot(cos, 0, 2*pi)
plot(exp, 1, 5)
plot(dnorm, -3, +3)
# Formula plot with options
plot(dnorm, -3, +3,
col = "#cc0000",
lwd = 5,
main = "Standard Normal Distribution",
xlab = "z-scores",
ylab = "Density")
# Clear packages
detach("package:datasets", unload = TRUE)
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
?mtcars
library(datasets)
?mtcars
head(mtcars)
# installing a package
install.packages("MASS")
#load a library
library("MASS")
# attach to memory
attach(Boston)
#data description
?Boston
# show the first 6 rows
head(Boston)
#get the dimension of the dataset
dim(Boston)
nrow(Boston)
# column names
names(Boston)
#showing the structure of the dataset
str(Boston)
# number of cols
ncol(Boston)
#summary() function shows the summary statistics
summary(Boston)
#choose a specific column
Boston$crim
# summary of a specific column
summary(Boston$tax)
library(ISLR)
install.packages("ISLR")
library(ISLR)
data("Auto")
head(Auto)
head(ISRL)
head(ISLR)
?ISLR
sumary(Auto$mpg)
summary(Auto$mpg)
fivenum(Auto$mpg)
# histogram
hist(Auto$mpg)
mean(Auto$msg)
mean(Auto$weight)
median(Auto$horsepower)
help("read.csv")
data1 <- read.csv(file.choose(), header = TRUE)
data1 <- read.csv(file.choose(), header = TRUE)
data1 <- read.csv(file.choose(), header = TRUE)
head(data1)
View(data1)
dim(data1)
getwd()
if(!require("ISLR")) {
install.packages("ISLR")
library(ISLR)
}
data("Auto")
head(Auto)
head(Auto)
summary(Auto$mpg)
#same as sumary without the header
fivenum(Auto$mpg)
# histogram
hist(Auto$mpg)
#reading the csv file
EPI_data <- read.csv("./2010EPI_data.csv")
#reading the csv file
EPI_data <- read.csv("2010EPI_data.csv")
#reading the csv file
EPI_data <- read.csv("./2010EPI_data.csv")
#reading the csv file
EPI_data <- read.csv("./2010EPI_data.csv")
setwd("~/Documents/GitHub/DataAnalytics_Arya_Shahvar/group_1/lab1/lab")
#reading the csv file
EPI_data <- read.csv("./2010EPI_data.csv")
EPI_data.head()
head(EPI_data)
View(EPI_data)
